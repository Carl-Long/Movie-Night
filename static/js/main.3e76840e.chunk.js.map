{"version":3,"sources":["MovieTile.jsx","App.js","reportWebVitals.js","index.js"],"names":["MovieTile","_ref","movie","react_default","a","createElement","className","src","poster_path","concat","alt","original_title","release_date","vote_average","toFixed","providers","providers_logo_path","map","i","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","api_key","API_URL","App","_useState","useState","_useState2","slicedToArray","movies","setMovies","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","resultTerm","setResultTerm","_useState7","_useState8","searching","setSearching","_useState9","_useState10","hasSearched","setHasSearched","_useState11","_useState12","genres","setGenres","handleApiCall","asyncToGenerator","_callee","response","data","ids","streamingInfo","finalData","_context","ok","json","results","id","getStreamingPlatforms","addStreamInfoToMovies","alert","console","log","_x","apply","arguments","getGenreList","_ref2","_callee2","getgenres","_context2","fetch","getByGenre","_ref3","_callee3","genre","genreId","getByGenreUrl","_context3","splice","_x2","_x3","getTrending","_ref4","_callee4","getTrendingUrl","_context4","getTopRated","_ref5","_callee5","getTopRatedUrl","_context5","getRandomNumber","min","max","Math","floor","random","getRandom","_ref6","_callee6","randomPage","randomMovie","getRandomUrl","_context6","search","_ref7","_callee7","title","_context7","_x4","_ref8","_callee8","_context8","GB","_x5","logoPath","j","flatrate","provider_name","logo_path","k","ads","useEffect","placeholder","onChange","e","target","onKeyDown","onClick","label","split","src_MovieTile","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oMAsCeA,SAjCG,SAAHC,GAAkB,IAAZC,EAAKD,EAALC,MACnB,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEE,IAA2B,OAAtBL,EAAMM,YAAoB,GAAAC,OATvB,oCASsCA,OAAGP,EAAMM,aAAgB,kCACvEE,IAAKR,EAAMS,kBAGfR,EAAAC,EAAAC,cAAA,gBAAQH,EAAMS,eAAgB,KAAMT,EAAMU,aAAc,IAAG,IAAGV,EAAMW,aAAaC,QAAQ,GAAI,SAC7FX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEY,kBAAvBJ,EAAMa,UAAU,GAEZZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXJ,EAAMc,oBAAoBC,IAAI,SAAAC,GAAC,OAC7Bf,EAAAC,EAAAC,cAAA,OAAKE,IAAG,GAAAE,OApBX,kCAoBwBA,OAAGS,GACtBR,IAAG,GAAAD,OAAKP,EAAMa,UAAUG,SAK7Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,8CC5B/Cc,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,OAAAgB,eAAAH,EAAAC,EAAA,CAAAC,QAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAN,EAAAC,GAAA,IAAAF,EAAA,aAAAQ,GAAAR,EAAA,SAAAC,EAAAC,EAAAC,GAAA,OAAAF,EAAAC,GAAAC,GAAA,SAAAM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAA1B,MAAA+B,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAG,EAAArC,EAAAsB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAAtC,EAAAsB,IAAA,MAAAf,GAAA,OAAA4B,KAAA,QAAAb,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAyB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAA1C,EAAA0C,EAAAhD,EAAA,kBAAAiD,OAAA,IAAAC,EAAAxD,OAAAyD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3D,GAAAG,EAAAiD,KAAAO,EAAApD,KAAAgD,EAAAI,GAAA,IAAAE,EAAAP,EAAApD,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAyB,GAAA,SAAAO,EAAA5D,GAAA,0BAAA6D,QAAA,SAAA5B,GAAAtB,EAAAX,EAAAiC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAnC,EAAAoC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAApB,EAAAuD,EAAAvD,MAAA,OAAAA,GAAA,iBAAAA,GAAAb,EAAAiD,KAAApC,EAAA,WAAAiD,EAAAG,QAAApD,EAAAwD,SAAAC,KAAA,SAAAzD,GAAAsD,EAAA,OAAAtD,EAAAoD,EAAAC,IAAA,SAAAhD,GAAAiD,EAAA,QAAAjD,EAAA+C,EAAAC,KAAAJ,EAAAG,QAAApD,GAAAyD,KAAA,SAAAC,GAAAH,EAAAvD,MAAA0D,EAAAN,EAAAG,IAAA,SAAAI,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAAO,KAAAN,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA/B,SAAAuB,EAAAI,QAAA,QAAAyC,IAAAzC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA/B,SAAAqE,SAAA9C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAwC,EAAAnC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAA0C,UAAA,yDAAApC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA/B,SAAAuB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAqC,EAAAhC,EAAAX,IAAA,OAAA2C,IAAA7B,MAAAnB,EAAAQ,EAAAyC,YAAAD,EAAA/D,MAAAe,EAAAkD,KAAA1C,EAAA2C,QAAA,WAAAnD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAwC,GAAA7C,EAAAQ,SAAA,KAAAG,GAAAqC,GAAAhD,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAQ,SAAA,KAAAG,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA5B,KAAAkC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAtC,EAAAsC,EAAAQ,YAAA,GAAA9C,EAAAE,KAAA,gBAAAF,EAAAX,IAAAiD,EAAAQ,WAAA9C,EAAA,SAAAf,EAAAN,GAAA8B,KAAAkC,WAAA,EAAAJ,OAAA,SAAA5D,EAAAqC,QAAAoB,EAAA3B,WAAAsC,OAAA,YAAAlC,EAAAmC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAxF,GAAA,GAAAyF,EAAA,OAAAA,EAAA5C,KAAA2C,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAArG,GAAA,EAAAoF,EAAA,SAAAA,IAAA,OAAApF,EAAAkG,EAAAG,QAAA,GAAA/F,EAAAiD,KAAA2C,EAAAlG,GAAA,OAAAoF,EAAAjE,MAAA+E,EAAAlG,GAAAoF,EAAA/B,MAAA,EAAA+B,EAAA,OAAAA,EAAAjE,WAAA4D,EAAAK,EAAA/B,MAAA,EAAA+B,GAAA,OAAAA,UAAA,OAAAA,KAAA3C,GAAA,SAAAA,IAAA,OAAAtB,WAAA4D,EAAA1B,MAAA,UAAAG,EAAAnD,UAAAoD,EAAAzC,EAAAgD,EAAA,cAAAP,GAAAzC,EAAAyC,EAAA,cAAAD,KAAA8C,YAAAtF,EAAAyC,EAAA3C,EAAA,qBAAAZ,EAAAqG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjD,GAAA,uBAAAiD,EAAAH,aAAAG,EAAAE,QAAAzG,EAAA0G,KAAA,SAAAJ,GAAA,OAAApG,OAAAyG,eAAAzG,OAAAyG,eAAAL,EAAA/C,IAAA+C,EAAAM,UAAArD,EAAAzC,EAAAwF,EAAA1F,EAAA,sBAAA0F,EAAAnG,UAAAD,OAAA6B,OAAA+B,GAAAwC,GAAAtG,EAAA6G,MAAA,SAAAxE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA9D,WAAAW,EAAAmD,EAAA9D,UAAAO,EAAA,kBAAA+C,OAAAzD,EAAAiE,gBAAAjE,EAAA8G,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAAuC,QAAA,IAAAA,MAAA6C,SAAA,IAAAC,EAAA,IAAA/C,EAAA1C,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuC,GAAA,OAAAlE,EAAAqG,oBAAA5E,GAAAuF,IAAA9B,OAAAR,KAAA,SAAAF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAvD,MAAA+F,EAAA9B,UAAAnB,EAAAD,GAAAhD,EAAAgD,EAAAlD,EAAA,aAAAE,EAAAgD,EAAAtD,EAAA,kBAAAiD,OAAA3C,EAAAgD,EAAA,mDAAA9D,EAAAiH,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAAjG,KAAAkG,EAAAD,EAAArB,KAAA5E,GAAA,OAAAiG,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAd,QAAA,KAAAnF,EAAAiG,EAAAG,MAAA,GAAApG,KAAAkG,EAAA,OAAAhC,EAAAjE,MAAAD,EAAAkE,EAAA/B,MAAA,EAAA+B,EAAA,OAAAA,EAAA/B,MAAA,EAAA+B,IAAAlF,EAAA6D,SAAA5B,EAAA9B,UAAA,CAAAqG,YAAAvE,EAAA8D,MAAA,SAAAsB,GAAA,GAAA5D,KAAA6D,KAAA,EAAA7D,KAAAyB,KAAA,EAAAzB,KAAAb,KAAAa,KAAAZ,WAAAgC,EAAApB,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAAwC,EAAApB,KAAAkC,WAAA3B,QAAA6B,IAAAwB,EAAA,QAAAZ,KAAAhD,KAAA,MAAAgD,EAAAc,OAAA,IAAAnH,EAAAiD,KAAAI,KAAAgD,KAAAP,OAAAO,EAAAe,MAAA,MAAA/D,KAAAgD,QAAA5B,IAAA4C,KAAA,WAAAhE,KAAAN,MAAA,MAAAuE,EAAAjE,KAAAkC,WAAA,GAAAG,WAAA,aAAA4B,EAAAxE,KAAA,MAAAwE,EAAArF,IAAA,OAAAoB,KAAAkE,MAAA7E,kBAAA,SAAA8E,GAAA,GAAAnE,KAAAN,KAAA,MAAAyE,EAAA,IAAA5F,EAAAyB,KAAA,SAAAoE,EAAAC,EAAAC,GAAA,OAAA/E,EAAAE,KAAA,QAAAF,EAAAX,IAAAuF,EAAA5F,EAAAkD,KAAA4C,EAAAC,IAAA/F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAwC,KAAAkD,EAAA,QAAAjI,EAAA2D,KAAAkC,WAAAQ,OAAA,EAAArG,GAAA,IAAAA,EAAA,KAAAwF,EAAA7B,KAAAkC,WAAA7F,GAAAkD,EAAAsC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA9B,KAAA6D,KAAA,KAAAU,EAAA5H,EAAAiD,KAAAiC,EAAA,YAAA2C,EAAA7H,EAAAiD,KAAAiC,EAAA,iBAAA0C,GAAAC,EAAA,IAAAxE,KAAA6D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA/B,KAAA6D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAAvE,KAAA6D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA3F,MAAA,6CAAAmB,KAAA6D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAA1C,OAAA,SAAAG,EAAAb,GAAA,QAAAvC,EAAA2D,KAAAkC,WAAAQ,OAAA,EAAArG,GAAA,IAAAA,EAAA,KAAAwF,EAAA7B,KAAAkC,WAAA7F,GAAA,GAAAwF,EAAAC,QAAA9B,KAAA6D,MAAAlH,EAAAiD,KAAAiC,EAAA,eAAA7B,KAAA6D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAhF,GAAA,aAAAA,IAAAgF,EAAA3C,QAAAlD,MAAA6F,EAAAzC,aAAAyC,EAAA,UAAAlF,EAAAkF,IAAApC,WAAA,UAAA9C,EAAAE,OAAAF,EAAAX,MAAA6F,GAAAzE,KAAArB,OAAA,OAAAqB,KAAAyB,KAAAgD,EAAAzC,WAAA9C,GAAAc,KAAA0E,SAAAnF,IAAAmF,SAAA,SAAAnF,EAAA0C,GAAA,aAAA1C,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAyB,KAAAlC,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAAkE,KAAAlE,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAyB,KAAA,kBAAAlC,EAAAE,MAAAwC,IAAAjC,KAAAyB,KAAAQ,GAAA/C,GAAAyF,OAAA,SAAA3C,GAAA,QAAA3F,EAAA2D,KAAAkC,WAAAQ,OAAA,EAAArG,GAAA,IAAAA,EAAA,KAAAwF,EAAA7B,KAAAkC,WAAA7F,GAAA,GAAAwF,EAAAG,eAAA,OAAAhC,KAAA0E,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA3C,IAAA0F,MAAA,SAAA9C,GAAA,QAAAzF,EAAA2D,KAAAkC,WAAAQ,OAAA,EAAArG,GAAA,IAAAA,EAAA,KAAAwF,EAAA7B,KAAAkC,WAAA7F,GAAA,GAAAwF,EAAAC,WAAA,KAAAvC,EAAAsC,EAAAQ,WAAA,aAAA9C,EAAAE,KAAA,KAAAoF,EAAAtF,EAAAX,IAAAwD,EAAAP,GAAA,OAAAgD,GAAA,UAAAhG,MAAA,0BAAAiG,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAA1B,KAAAjB,SAAA,CAAA/B,SAAAoD,EAAAmC,GAAAf,aAAAE,WAAA,SAAA1B,KAAArB,SAAAqB,KAAApB,SAAAwC,GAAAlC,IAAA3C,EAGA,IAAMwI,EAAU,mCACVC,EAAO,qDAAApJ,OAAwDmJ,GA8RtDE,MA5Rf,WAAe,IAAAC,EACeC,mBAAS,IAAGC,EAAA3I,OAAA4I,EAAA,EAAA5I,CAAAyI,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAAAI,EACYL,mBAAS,IAAGM,EAAAhJ,OAAA4I,EAAA,EAAA5I,CAAA+I,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EACIT,mBAAS,KAAIU,EAAApJ,OAAA4I,EAAA,EAAA5I,CAAAmJ,EAAA,GAA1CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EACEb,oBAAS,GAAMc,EAAAxJ,OAAA4I,EAAA,EAAA5I,CAAAuJ,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACQjB,oBAAS,GAAMkB,EAAA5J,OAAA4I,EAAA,EAAA5I,CAAA2J,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAC4BrB,mBAAS,IAAGsB,EAAAhK,OAAA4I,EAAA,EAAA5I,CAAA+J,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAKlBG,EAAa,eAAAxL,EAAAqB,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAA6D,EAAOC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7K,IAAAwB,KAAA,SAAAsJ,GAAA,cAAAA,EAAAvD,KAAAuD,EAAA3F,MAAA,WAC/BsF,EAASM,GAAE,CAAAD,EAAA3F,KAAA,gBAAA2F,EAAA3F,KAAA,EACIsF,EAASO,OAAM,OAI9B,OAHFN,GADIA,EAAII,EAAAjI,MACIoI,QACNN,EAAMD,EAAK5K,IAAI,SAAC4K,GACpB,OAAOA,EAAKQ,KACZJ,EAAA3F,KAAA,EAEwBgG,EAAsBR,GAAI,OAapD,OAbIC,EAAaE,EAAAjI,KACbgI,EAAYO,EAAsBV,EAAME,GAY5CE,EAAA9H,OAAA,SAEO6H,GAAS,QAGhBQ,MAAM,wBACNC,QAAQC,IAAId,GAAS,yBAAAK,EAAApD,SAAA8C,MAExB,gBA7BkBgB,GAAA,OAAA1M,EAAA2M,MAAA/H,KAAAgI,YAAA,GAgDbC,EAAY,eAAAC,EAAAzL,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAAkF,IAAA,IAAAC,EAAArB,EAAAC,EAAA,OAAA1K,IAAAwB,KAAA,SAAAuK,GAAA,cAAAA,EAAAxE,KAAAwE,EAAA5G,MAAA,OAC+D,OAA5E2G,EAAS,yDAAAxM,OAA4DmJ,EAAO,mBAAAsD,EAAA5G,KAAA,EAC3D6G,MAAK,GAAA1M,OAAIwM,IAAY,OAA9B,OAARrB,EAAQsB,EAAAlJ,KAAAkJ,EAAA5G,KAAA,EACGsF,EAASO,OAAM,OAChCN,GADIA,EAAIqB,EAAAlJ,MACIuH,OAIZC,EAAUK,GAAM,wBAAAqB,EAAArE,SAAAmE,MACjB,kBATiB,OAAAD,EAAAH,MAAA/H,KAAAgI,YAAA,GAWZO,EAAU,eAAAC,EAAA/L,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAAwF,EAAOC,EAAOC,GAAO,IAAAC,EAAA7B,EAAAI,EAAA9K,EAAA,OAAAC,IAAAwB,KAAA,SAAA+K,GAAA,cAAAA,EAAAhF,KAAAgF,EAAApH,MAAA,OAG2G,OAFjJ0E,GAAa,GACbJ,EAAc2C,GACRE,EAAa,uDAAAhN,OAA0DmJ,EAAO,uDAAAnJ,OAAsD+M,EAAO,2DAAAE,EAAApH,KAAA,EAC1H6G,MAAK,GAAA1M,OAAIgN,IAAgB,OAAlC,OAAR7B,EAAQ8B,EAAA1J,KAAA0J,EAAApH,KAAA,EACUmF,EAAcG,GAAS,OAI/C,IAJMI,EAAS0B,EAAA1J,KAIN9C,EAAI,EAAGA,EAAI8K,EAAUzE,OAAQrG,IACF,iBAA9B8K,EAAU9K,GAAGH,UAAU,KACzBiL,EAAU2B,OAAO,CAACzM,GAAI,GACtBA,KAIJkJ,EAAU4B,GACVhB,GAAa,GACbI,GAAe,GAAM,yBAAAsC,EAAA7E,SAAAyE,MACtB,gBAnBeM,EAAAC,GAAA,OAAAR,EAAAT,MAAA/H,KAAAgI,YAAA,GAqBViB,EAAW,eAAAC,EAAAzM,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAAkG,IAAA,IAAAC,EAAArC,EAAAI,EAAA,OAAA7K,IAAAwB,KAAA,SAAAuL,GAAA,cAAAA,EAAAxF,KAAAwF,EAAA5H,MAAA,OAGuE,OAFzF0E,GAAa,GACbJ,EAAc,YACRqD,EAAc,2DAAAxN,OAA8DmJ,GAAOsE,EAAA5H,KAAA,EAClE6G,MAAK,GAAA1M,OAAIwN,IAAiB,OAAnC,OAARrC,EAAQsC,EAAAlK,KAAAkK,EAAA5H,KAAA,EACUmF,EAAcG,GAAS,OAAzCI,EAASkC,EAAAlK,KACfoG,EAAU4B,GACVhB,GAAa,GACbI,GAAe,GAAM,yBAAA8C,EAAArF,SAAAmF,MACtB,kBATgB,OAAAD,EAAAnB,MAAA/H,KAAAgI,YAAA,GAWXsB,EAAW,eAAAC,EAAA9M,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAAuG,IAAA,IAAAC,EAAA1C,EAAAI,EAAA,OAAA7K,IAAAwB,KAAA,SAAA4L,GAAA,cAAAA,EAAA7F,KAAA6F,EAAAjI,MAAA,OAIoE,OAHtF0E,GAAa,GACbJ,EAAc,aAER0D,EAAc,wDAAA7N,OAA2DmJ,EAAO,6BAAA2E,EAAAjI,KAAA,EAC/D6G,MAAK,GAAA1M,OAAI6N,IAAiB,OAAnC,OAAR1C,EAAQ2C,EAAAvK,KAAAuK,EAAAjI,KAAA,EACUmF,EAAcG,GAAS,OAAzCI,EAASuC,EAAAvK,KACfoG,EAAU4B,GACVhB,GAAa,GACbI,GAAe,GAAM,yBAAAmD,EAAA1F,SAAAwF,MACtB,kBAVgB,OAAAD,EAAAxB,MAAA/H,KAAAgI,YAAA,GAYX2B,EAAkB,SAACC,EAAKC,GAE5B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GAGjDK,EAAS,eAAAC,EAAAzN,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAAkH,IAAA,IAAAC,EAAAC,EAAAC,EAAAvD,EAAAI,EAAA,OAAA7K,IAAAwB,KAAA,SAAAyM,GAAA,cAAAA,EAAA1G,KAAA0G,EAAA9I,MAAA,OAMuI,OALvJ0E,GAAa,GACbJ,EAAc,oBACVqE,EAAaT,EAAgB,EAAG,IAChCU,EAAcV,EAAgB,EAAG,IAE/BW,EAAY,uDAAA1O,OAA0DmJ,EAAO,2DAAAnJ,OAA0DwO,EAAU,2DAAAG,EAAA9I,KAAA,EAChI6G,MAAK,GAAA1M,OAAI0O,IAAe,OAAjC,OAARvD,EAAQwD,EAAApL,KAAAoL,EAAA9I,KAAA,GACQmF,EAAcG,GAAS,QAKX,kBAHlCI,EAAY,EAFRA,EAASoD,EAAApL,MAEUkL,KAGT,GAAGnO,UAAU,GACzB+N,KAGA1E,EAAU4B,GACVhB,GAAa,GACbI,GAAe,IAChB,yBAAAgE,EAAAvG,SAAAmG,MACF,kBArBc,OAAAD,EAAAnC,MAAA/H,KAAAgI,YAAA,GAuBTwC,EAAM,eAAAC,EAAAhO,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAAyH,EAAOC,GAAK,IAAA5D,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7K,IAAAwB,KAAA,SAAA8M,GAAA,cAAAA,EAAA/G,KAAA+G,EAAAnJ,MAAA,UACX,KAAVkJ,GAA0B,MAAVA,EAAa,CAAAC,EAAAnJ,KAAA,QAEmC,OADlEkJ,EAAQ,IACRhD,MAAM,6DAA4DiD,EAAAtL,OAAA,iBAK/C,OADrB6G,GAAa,GACbJ,EAAc4E,GAAOC,EAAAnJ,KAAA,EACE6G,MAAK,GAAA1M,OAAIoJ,EAAO,WAAApJ,OAAU+O,IAAQ,OAA3C,KAAR5D,EAAQ6D,EAAAzL,MACDkI,GAAE,CAAAuD,EAAAnJ,KAAA,gBAAAmJ,EAAAnJ,KAAA,GACIsF,EAASO,OAAM,QAI9B,OAHFN,GADIA,EAAI4D,EAAAzL,MACIoI,QAAQxD,MAAM,EAAG,IACvBkD,EAAMD,EAAK5K,IAAI,SAAC4K,GACpB,OAAOA,EAAKQ,KACZoD,EAAAnJ,KAAA,GAEwBgG,EAAsBR,GAAI,QAAhDC,EAAa0D,EAAAzL,KACbgI,EAAYO,EAAsBV,EAAME,GAE5C3B,EAAU4B,GACVhB,GAAa,GACbI,GAAe,GAAMqE,EAAAnJ,KAAA,iBAGrBkG,MAAM,uEACNC,QAAQC,IAAId,GACZyD,EAAO,KAAK,yBAAAI,EAAA5G,SAAA0G,MAEf,gBA7BWG,GAAA,OAAAJ,EAAA1C,MAAA/H,KAAAgI,YAAA,GA+BNP,EAAqB,eAAAqD,EAAArO,OAAAoK,EAAA,EAAApK,CAAAH,IAAA2G,KAAG,SAAA8H,EAAO9D,GAAG,IAAAC,EAAA7K,EAAA0K,EAAAC,EAAA,OAAA1K,IAAAwB,KAAA,SAAAkN,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAvJ,MAAA,OAClCyF,EAAgB,GACX7K,EAAI,EAAC,YAAEA,EAAI4K,EAAIvE,QAAM,CAAAsI,EAAAvJ,KAAA,gBAAAuJ,EAAAvJ,KAAA,EACP6G,MAAK,sCAAA1M,OAAuCqL,EAAI5K,GAAE,6BAAAT,OAA4BmJ,IAAU,OAAjG,OAARgC,EAAQiE,EAAA7L,KAAA6L,EAAAvJ,KAAA,EACKsF,EAASO,OAAM,OAChCN,GADIA,EAAIgE,EAAA7L,MACIoI,QAAQ0D,GACpB/D,EAAc/E,KAAK6E,GAAK,QAJM3K,IAAG2O,EAAAvJ,KAAA,uBAAAuJ,EAAA1L,OAAA,SAM5B4H,GAAa,yBAAA8D,EAAAhH,SAAA+G,MACrB,gBAT0BG,GAAA,OAAAJ,EAAA/C,MAAA/H,KAAAgI,YAAA,GAWrBN,EAAwB,SAACV,EAAME,GAInC,IAHA,IAAIhL,EAAY,GACZiP,EAAW,GAEN9O,EAAI,EAAGA,EAAI6K,EAAcxE,OAAQrG,IAAK,CAC7C,GAAiC,qBAArB6K,EAAc7K,KACnB6K,EAAc7K,GAAGO,eAAe,cAC9BsK,EAAc7K,GAAGO,eAAe,OACvCV,EAAUiG,KAAK,qBAGZ,CACH,GAAI+E,EAAc7K,GAAGO,eAAe,YAClC,IAAK,IAAIwO,EAAI,EAAGA,EAAIlE,EAAc7K,GAAGgP,SAAS3I,OAAQ0I,IACpDlP,EAAUiG,KAAK+E,EAAc7K,GAAGgP,SAASD,GAAGE,eAC5CH,EAAShJ,KAAK+E,EAAc7K,GAAGgP,SAASD,GAAGG,WAG/C,GAAIrE,EAAc7K,GAAGO,eAAe,OAClC,IAAK,IAAI4O,EAAI,EAAGA,EAAItE,EAAc7K,GAAGoP,IAAI/I,OAAQ8I,IAC/CtP,EAAUiG,KAAK+E,EAAc7K,GAAGoP,IAAID,GAAGF,eACvCH,EAAShJ,KAAK+E,EAAc7K,GAAGoP,IAAID,GAAGD,WAI5CvE,EAAK3K,GAAGH,UAAYA,EACpB8K,EAAK3K,GAAGF,oBAAsBgP,EAC9BjP,EAAY,GACZiP,EAAW,GAGb,OAAOnE,GAOT,OAJA0E,oBAAU,WACRzD,KACC,IAGD3M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACEmQ,YAAY,qBACZnO,MAAOkI,EACPkG,SAAU,SAACC,GAAC,OAAKlG,EAAckG,EAAEC,OAAOtO,QACxCuO,UA9La,SAAAF,GACP,UAAVA,EAAEtO,KACJiN,EAAO9E,MA8LHpK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKuQ,QAAS,kBAAMxB,EAAO9E,KAAY,OAE3DpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYwQ,MAAM,SAASL,SA9L7B,SAAAC,GACxB,GAAuB,KAAnBA,EAAEC,OAAOtO,MAAc,CACzB,IAAIkL,EAAQmD,EAAEC,OAAOtO,MAAM0O,MAAM,KAAK,GAClCvD,EAAUkD,EAAEC,OAAOtO,MAAM0O,MAAM,KAAK,GACxC3D,EAAWG,EAAOC,QAGlB6B,EAAO,MAwLClP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQ8B,IAAI,IAAIC,MAAO,IAAG,aAE1CkJ,EAAOtK,IAAI,SAACsM,GAAK,OACfpN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQ8B,IAAKmL,EAAMlB,GAAIhK,MAAO,CAACkL,EAAM1F,KAAM0F,EAAMlB,KAAMkB,EAAM1F,SAIvF1H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASuQ,QAAS,kBAAM/C,MAAc,YACxD3N,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASuQ,QAAS,kBAAM1C,MAAc,aACxDhO,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASuQ,QAAS,kBAAM/B,MAAY,iBAG1D3O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEI,MAAfqK,EAEIxK,EAAAC,EAAAC,cAAA,6HAEiB,IAAd0K,EACH5K,EAAAC,EAAAC,cAAA,6BAAqBsK,EAAU,SACb,IAAhBQ,EAAwBhL,EAAAC,EAAAC,cAAA,sBAAc8J,EAAO5C,OAAM,iBAAgBoD,EAAU,KAC7ExK,EAAAC,EAAAC,cAAA,aAIR8J,EAAO5C,OAAS,EAEZpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEX6J,EAAOlJ,IAAI,SAACf,GAAK,OACfC,EAAAC,EAAAC,cAAC2Q,EAAS,CAAC5O,IAAKlC,EAAMmM,GAAInM,MAAOA,OAGlB,IAAlBiK,EAAO5C,SAAgC,IAAhB4D,EAC1BhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,8BAEAF,EAAAC,EAAAC,cAAA,cChRC4Q,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAV,EAAA,GAAA5K,KAAAsL,EAAAC,KAAA,UAAqBvL,KAAK,SAAA7F,GAAiD,IAA9CqR,EAAMrR,EAANqR,OAAQC,EAAMtR,EAANsR,OAAQC,EAAMvR,EAANuR,OAAQC,EAAMxR,EAANwR,OAAQC,EAAOzR,EAAPyR,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5R,EAAAC,EAAAC,cAACF,EAAAC,EAAM4R,WAAU,KACf7R,EAAAC,EAAAC,cAAC4R,EAAG,QAORhB","file":"static/js/main.3e76840e.chunk.js","sourcesContent":["import React from 'react';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w342/';\nconst LOGO_URL = 'https://image.tmdb.org/t/p/w92';\n\nconst MovieTile = ({ movie }) => {\n  return (\n\n    <div className='movie'>\n      <div>\n        <img\n          src={movie.poster_path !== null ? `${IMAGE_URL}${movie.poster_path}` : 'https://via.placeholder.com/400'}\n          alt={movie.original_title}\n        />\n      </div>\n      <span> {movie.original_title}{' ('}{movie.release_date}{')'} {movie.vote_average.toFixed(1)}{' / 10'}</span>\n      <div className='platforms'>\n        {\n          movie.providers[0] !== 'not available'\n            ? (\n              <div className='available'>\n                {\n                  movie.providers_logo_path.map(i => (\n                    <img src={`${LOGO_URL}${i}`}\n                      alt={`${movie.providers[i]}`}\n                    />\n                  ))\n                }\n              </div>\n            ) : (<div className='notAvailable'><h3> Not available</h3></div>\n\n            )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default MovieTile;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MovieTile from './MovieTile';\n\nconst api_key = '65758923a4428c1a48dbf0f29234d763'\nconst API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}`\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('')\n  const [resultTerm, setResultTerm] = useState('_')\n  const [searching, setSearching] = useState(false)\n  const [hasSearched, setHasSearched] = useState(false)\n  // const [onlyAvailable, setOnlyAvailable] = useState(false)\n  const [genres, setGenres] = useState([])\n\n\n  //functions\n\n  const handleApiCall = async (response) => {\n    if (response.ok) {\n      let data = await response.json();\n      data = data.results;\n      const ids = data.map((data) => {\n        return data.id;\n      })\n\n      let streamingInfo = await getStreamingPlatforms(ids);\n      let finalData = addStreamInfoToMovies(data, streamingInfo);\n\n      //Only shows streamable results\n      //if(onlyAvailable === true){\n      //for(let i = 0; i < finalData.length; i++){\n      //  if(finalData[i].providers[0] === 'not available'){\n      //    finalData.splice([i], 1);\n      //    i--;\n      //console.log(finalData);\n      //console.log(finalData[i].original_title);\n      //  }\n      //}\n      //}\n\n      return finalData;\n    }\n    else {\n      alert('Something went wrong')\n      console.log(response)\n    }\n  }\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      search(searchTerm)\n    }\n  }\n\n  const handleGenreChange = e => {\n    if (e.target.value !== '') {\n      let genre = e.target.value.split(',')[0];\n      let genreId = e.target.value.split(',')[1];\n      getByGenre(genre, genreId);\n    }\n    else {\n      search('');\n    }\n  }\n\n  const getGenreList = async () => {\n    const getgenres = `https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}&language=en-US`\n    const response = await fetch(`${getgenres}`);\n    let data = await response.json();\n    data = data.genres;\n\n    //removes documentary from genres\n    //data.splice([5], 1)\n    setGenres(data);\n  }\n\n  const getByGenre = async (genre, genreId) => {\n    setSearching(true);\n    setResultTerm(genre);\n    const getByGenreUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&language=en-US&sortby=popularity.desc&with_genres=${genreId}&watch_region=GB&with_watch_monetization_types=flatrate`;\n    const response = await fetch(`${getByGenreUrl}`);\n    const finalData = await handleApiCall(response);\n\n    //Removes any movies that are only streamable on Virgin Tv Go \n    //as we dont have this.\n    for (let i = 0; i < finalData.length; i++) {\n      if (finalData[i].providers[0] === 'Virgin TV Go') {\n        finalData.splice([i], 1);\n        i--;\n      }\n    }\n\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n  }\n\n  const getTrending = async () => {\n    setSearching(true);\n    setResultTerm('trending');\n    const getTrendingUrl = `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`;\n    const response = await fetch(`${getTrendingUrl}`);\n    const finalData = await handleApiCall(response);\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n  }\n\n  const getTopRated = async () => {\n    setSearching(true);\n    setResultTerm('Top Rated');\n\n    const getTopRatedUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&region=GB`;\n    const response = await fetch(`${getTopRatedUrl}`);\n    const finalData = await handleApiCall(response);\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n  }\n\n  const getRandomNumber = (min, max) => {\n    // get number between min (inclusive) and max (inclusive)\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  const getRandom = async () => {\n    setSearching(true);\n    setResultTerm('Random Selection');\n    let randomPage = getRandomNumber(1, 15);\n    let randomMovie = getRandomNumber(0, 19);\n\n    const getRandomUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&language=en-US&region=GB&sort_by=popularity.desc&page=${randomPage}&watch_region=GB&with_watch_monetization_types=flatrate`;\n    const response = await fetch(`${getRandomUrl}`);\n    let finalData = await handleApiCall(response);\n\n    finalData = [finalData[randomMovie]];\n    //chooses another selection if only available on Virgin TV go\n    //as we don't have this service\n    if (finalData[0].providers[0] === 'Virgin TV Go') {\n      getRandom();\n    }\n    else {\n      setMovies(finalData);\n      setSearching(false);\n      setHasSearched(true);\n    }\n  }\n\n  const search = async (title) => {\n    if (title === '' || title === ' ') {\n      title = '_';\n      alert('Please enter a movie to search or choose a genre/category')\n      return;\n    }\n\n    setSearching(true)\n    setResultTerm(title);\n    const response = await fetch(`${API_URL}&query=${title}`);\n    if (response.ok) {\n      let data = await response.json();\n      data = data.results.slice(0, 10);\n      const ids = data.map((data) => {\n        return data.id;\n      })\n\n      let streamingInfo = await getStreamingPlatforms(ids);\n      let finalData = addStreamInfoToMovies(data, streamingInfo);\n\n      setMovies(finalData);\n      setSearching(false);\n      setHasSearched(true);\n    }\n    else {\n      alert('Something went wrong, please check the search term you have entered')\n      console.log(response);\n      search('_');\n    }\n  }\n\n  const getStreamingPlatforms = async (ids) => {\n    let streamingInfo = [];\n    for (let i = 0; i < ids.length; i++) {\n      let response = await fetch(`https://api.themoviedb.org/3/movie/${ids[i]}/watch/providers?api_key=${api_key}`);\n      let data = await response.json();\n      data = data.results.GB;\n      streamingInfo.push(data)\n    }\n    return streamingInfo;\n  }\n\n  const addStreamInfoToMovies = (data, streamingInfo) => {\n    let providers = [];\n    let logoPath = [];\n\n    for (let i = 0; i < streamingInfo.length; i++) {\n      if ((typeof streamingInfo[i] === 'undefined')\n        || (!streamingInfo[i].hasOwnProperty('flatrate')\n          && (!streamingInfo[i].hasOwnProperty('ads')))) {\n        providers.push('not available')\n      }\n\n      else {\n        if (streamingInfo[i].hasOwnProperty('flatrate')) {\n          for (let j = 0; j < streamingInfo[i].flatrate.length; j++) {\n            providers.push(streamingInfo[i].flatrate[j].provider_name);\n            logoPath.push(streamingInfo[i].flatrate[j].logo_path);\n          }\n        }\n        if (streamingInfo[i].hasOwnProperty('ads')) {\n          for (let k = 0; k < streamingInfo[i].ads.length; k++) {\n            providers.push(streamingInfo[i].ads[k].provider_name);\n            logoPath.push(streamingInfo[i].ads[k].logo_path);\n          }\n        }\n      }\n      data[i].providers = providers;\n      data[i].providers_logo_path = logoPath;\n      providers = [];\n      logoPath = [];\n    }\n\n    return data;\n  }\n\n  useEffect(() => {\n    getGenreList();\n  }, []);\n\n  return (\n    <div className='app'>\n\n      <div className='header'>\n        <h1>It's Movie Night</h1>\n        <div className='search'>\n          <input\n            placeholder='Search for a movie'\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyDown={handleKeyPress}\n          />\n          <button className='go' onClick={() => search(searchTerm)}>Go</button>\n        </div>\n        <div className='preSelectedSearch'>\n          {\n            <select className='selectBar' label='Genres' onChange={handleGenreChange}>\n              <option className='genre' key='0' value={''}>Genres...</option>\n              {\n                genres.map((genre) => (\n                  <option className='genre' key={genre.id} value={[genre.name, genre.id]}>{genre.name}</option>\n                ))}\n            </select>\n          }\n          <button className='option' onClick={() => getTrending()}>Trending</button>\n          <button className='option' onClick={() => getTopRated()}>Top Rated</button>\n          <button className='option' onClick={() => getRandom()}>Surprise me</button>\n        </div>\n      </div>\n      <div className='results'>\n        {\n          resultTerm === '_'\n            ? (\n              <div>Search for a movie to check whether it can be streamed in the UK\n                or select an option to get some inspiration!</div>\n            ) : (searching === true ? (\n              <div> Searching for {resultTerm}... </div>\n            ) : hasSearched === true ? (<div>Showing {movies.length} results for '{resultTerm}'</div>\n            ) : <div></div>)\n        }\n      </div>\n      {\n        movies.length > 0\n          ? (\n            <div className='container'>\n              {\n                movies.map((movie) => (\n                  <MovieTile key={movie.id} movie={movie} />\n                ))}\n            </div>\n          ) : (movies.length === 0 && hasSearched === true ? (\n            <div className='empty'>\n              <h2>No movies found</h2>\n            </div>\n          ) : <div></div>)\n\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}