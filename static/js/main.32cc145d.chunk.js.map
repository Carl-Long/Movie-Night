{"version":3,"sources":["MovieTile.jsx","App.js","reportWebVitals.js","index.js"],"names":["MovieTile","_ref","movie","react_default","a","createElement","className","src","poster_path","concat","alt","original_title","release_date","vote_average","toFixed","providers","providers_logo_path","map","i","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","api_key","API_URL","App","_useState","useState","_useState2","slicedToArray","movies","setMovies","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","resultTerm","setResultTerm","_useState7","_useState8","searching","setSearching","_useState9","_useState10","hasSearched","setHasSearched","_useState11","_useState12","genres","setGenres","getGenreList","asyncToGenerator","_callee","getgenres","response","data","_context","fetch","json","splice","apply","arguments","getByGenre","_ref2","_callee2","genre","genreId","getByGenreUrl","ids","streamingInfo","finalData","_context2","results","id","getStreamingPlatforms","addStreamInfoToMovies","_x","_x2","getTrending","_ref3","_callee3","getTrendingUrl","_context3","getTopRated","_ref4","_callee4","getTopRatedUrl","_context4","getRandomNumber","min","max","Math","floor","random","getRandom","_ref5","_callee5","randomPage","randomMovie","getRandomUrl","_context5","console","log","search","_ref6","_callee6","title","_context6","_x3","_ref7","_callee7","_context7","GB","_x4","logoPath","j","flatrate","provider_name","logo_path","k","ads","useEffect","placeholder","onChange","e","target","onKeyDown","onClick","label","split","src_MovieTile","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.32cc145d.chunk.js","sourcesContent":["import React from 'react';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w342/';\nconst LOGO_URL = 'https://image.tmdb.org/t/p/w92';\n\nconst MovieTile = ({ movie }) => {\n  return (\n\n    <div className='movie'>\n      <div>\n        <img\n          src={movie.poster_path !== null ? `${IMAGE_URL}${movie.poster_path}` : 'https://via.placeholder.com/400'}\n          alt={movie.original_title}\n        />\n      </div>\n      <span> {movie.original_title}{' ('}{movie.release_date}{')'} {movie.vote_average.toFixed(1)}{' / 10'}</span>\n      <div className='platforms'>\n        {\n          movie.providers[0] !== 'not available'\n            ? (\n              <div className='available'>\n                {\n                  movie.providers_logo_path.map(i => (\n                    <img src={`${LOGO_URL}${i}`}\n                      alt={`${movie.providers[i]}`}\n                    />\n                  ))\n                }\n              </div>\n            ) : (<div className='notAvailable'><h3> Not available</h3></div>\n\n            )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default MovieTile;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MovieTile from './MovieTile';\n\nconst api_key = '65758923a4428c1a48dbf0f29234d763'\n//sample  call = https://api.themoviedb.org/3/movie/550?api_key=65758923a4428c1a48dbf0f29234d763\n\nconst API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}`\n//get provider = https://api.themoviedb.org/3/movie/This is movie id 886396/watch/providers?api_key=65758923a4428c1a48dbf0f29234d763\n//(data.results.GB.flatrate[0].provider_name) gets streaming platform\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/'\n\n\n//https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&language=en-US&sort_by=popularity.desc&with_genres={genre}&with_watch_monetization_types=flatrate\n\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('')\n  const [resultTerm, setResultTerm] = useState('_')\n  const [searching, setSearching] = useState(false)\n  const [hasSearched, setHasSearched] = useState(false)\n // const [onlyAvailable, setOnlyAvailable] = useState(false)\n  const [genres, setGenres] = useState([])\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      search(searchTerm)\n    }\n  }\n\n  const handleGenreChange = e => {\n    if (e.target.value !== '') {\n      let genre = e.target.value.split(',')[0];\n      let genreId = e.target.value.split(',')[1];\n      getByGenre(genre, genreId);\n    }\n    else {\n      search('');\n    }\n  }\n\n  const getGenreList = async () => {\n    const getgenres = `https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}&language=en-US`\n    const response = await fetch(`${getgenres}`);\n    let data = await response.json();\n    data = data.genres;\n\n    //removes documentary from genres\n    data.splice([5], 1)\n    setGenres(data);\n  }\n\n  const getByGenre = async (genre, genreId) => {\n    setSearching(true);\n    setResultTerm(genre);\n    const getByGenreUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&language=en-US&sortby=popularity.desc&with_genres=${genreId}&watch_region=GB&with_watch_monetization_types=flatrate`;\n    const response = await fetch(`${getByGenreUrl}`);\n    let data = await response.json();\n    data = data.results;\n    const ids = data.map((data) => {\n      return data.id;\n    })\n\n    let streamingInfo = await getStreamingPlatforms(ids);\n    let finalData = addStreamInfoToMovies(data, streamingInfo);\n\n    for (let i = 0; i < finalData.length; i++) {\n      if (finalData[i].providers[0] === 'Virgin TV Go') {\n        finalData.splice([i], 1);\n        i--;\n      }\n    }\n\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n  }\n\n  const getTrending = async () => {\n    setSearching(true);\n    setResultTerm('trending');\n    const getTrendingUrl = `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`;\n    const response = await fetch(`${getTrendingUrl}`);\n    let data = await response.json();\n    data = data.results;\n    const ids = data.map((data) => {\n      return data.id;\n    })\n    let streamingInfo = await getStreamingPlatforms(ids);\n\n    let finalData = addStreamInfoToMovies(data, streamingInfo);\n\n    //Only shows streamable results\n    //if(onlyAvailable === true){\n    //for(let i = 0; i < finalData.length; i++){\n    //  if(finalData[i].providers[0] === 'not available'){\n    //    finalData.splice([i], 1);\n    //    i--;\n    //console.log(finalData);\n    //console.log(finalData[i].original_title);\n    //  }\n    //}\n    //}\n\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n\n  }\n\n  const getTopRated = async () => {\n    setSearching(true);\n    setResultTerm('Top Rated');\n\n    const getTopRatedUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&region=GB`;\n    const response = await fetch(`${getTopRatedUrl}`);\n    let data = await response.json();\n    data = data.results;\n    const ids = data.map((data) => {\n      return data.id;\n    })\n    let streamingInfo = await getStreamingPlatforms(ids);\n\n    let finalData = addStreamInfoToMovies(data, streamingInfo);\n\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n  }\n\n\n  function getRandomNumber(min, max) {\n    // get number between min (inclusive) and max (inclusive)\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  const getRandom = async () => {\n    setSearching(true);\n    setResultTerm('Random Selection');\n    let randomPage = getRandomNumber(1, 15);\n    let randomMovie = getRandomNumber(0, 19);\n    console.log(randomMovie, randomPage);\n\n    const getRandomUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&language=en-US&region=GB&sort_by=popularity.desc&page=${randomPage}&watch_region=GB&with_watch_monetization_types=flatrate`;\n    const response = await fetch(`${getRandomUrl}`);\n    let data = await response.json();\n    data = data.results;\n    const ids = data.map((data) => {\n      return data.id;\n    })\n\n    let streamingInfo = await getStreamingPlatforms(ids);\n    let finalData = addStreamInfoToMovies(data, streamingInfo);\n\n    finalData = [finalData[randomMovie]];\n    if (finalData[0].providers[0] === 'Virgin TV Go') {\n      getRandom();\n    }\n    else {\n\n      setMovies(finalData);\n      setSearching(false);\n      setHasSearched(true);\n    }\n  }\n\n  const search = async (title) => {\n    if (title === '' || title === ' ') {\n      title = '_';\n    }\n    setSearching(true)\n    setResultTerm(title);\n\n    const response = await fetch(`${API_URL}&query=${title}`);\n    let data = await response.json();\n    data = data.results.slice(0, 10);\n    const ids = data.map((data) => {\n      return data.id;\n    })\n\n    let streamingInfo = await getStreamingPlatforms(ids);\n\n    let finalData = addStreamInfoToMovies(data, streamingInfo);\n    console.log(finalData);\n\n    setMovies(finalData);\n    setSearching(false);\n    setHasSearched(true);\n  }\n\n  const getStreamingPlatforms = async (ids) => {\n    let streamingInfo = [];\n    for (let i = 0; i < ids.length; i++) {\n      let response = await fetch(`https://api.themoviedb.org/3/movie/${ids[i]}/watch/providers?api_key=${api_key}`);\n      let data = await response.json();\n      data = data.results.GB;\n      streamingInfo.push(data)\n    }\n    return streamingInfo;\n  }\n\n  const addStreamInfoToMovies = (data, streamingInfo) => {\n    let providers = [];\n    let logoPath = [];\n\n    for (let i = 0; i < streamingInfo.length; i++) {\n      if ((typeof streamingInfo[i] === 'undefined')\n        || (!streamingInfo[i].hasOwnProperty('flatrate')\n          && (!streamingInfo[i].hasOwnProperty('ads')))) {\n        providers.push('not available')\n      }\n\n      else {\n        if (streamingInfo[i].hasOwnProperty('flatrate')) {\n          for (let j = 0; j < streamingInfo[i].flatrate.length; j++) {\n            providers.push(streamingInfo[i].flatrate[j].provider_name);\n            logoPath.push(streamingInfo[i].flatrate[j].logo_path);\n          }\n        }\n        if (streamingInfo[i].hasOwnProperty('ads')) {\n          for (let k = 0; k < streamingInfo[i].ads.length; k++) {\n            providers.push(streamingInfo[i].ads[k].provider_name);\n            logoPath.push(streamingInfo[i].ads[k].logo_path);\n          }\n        }\n      }\n      data[i].providers = providers;\n      data[i].providers_logo_path = logoPath;\n      providers = [];\n      logoPath = [];\n    }\n\n    return data;\n  }\n\n  useEffect(() => {\n    getGenreList();\n  }, []);\n\n  return (\n    <div className='app'>\n\n      <div className='header'>\n        <h1>It's Movie Night</h1>\n        <div className='search'>\n          <input\n            placeholder='Search for a movie'\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyDown={handleKeyPress}\n          />\n          <button className='go' onClick={() => search(searchTerm)}>Go</button>\n        </div>\n        <div className='preSelectedSearch'>\n          {\n            <select className='selectBar' label='Genres' onChange={handleGenreChange}>\n              <option className='genre' key='0' value={''}>Genres...</option>\n              {\n                genres.map((genre) => (\n                  <option className='genre' key={genre.id} value={[genre.name, genre.id]}>{genre.name}</option>\n                ))}\n            </select>\n          }\n          <button className='option' onClick={() => getTrending()}>Trending</button>\n          <button className='option' onClick={() => getTopRated()}>Top Rated</button>\n          <button className='option' onClick={() => getRandom()}>Surprise me</button>\n        </div>\n      </div>\n      <div className='results'>\n        {\n          resultTerm === '_'\n            ? (\n              <div>Search for a movie to check whether it can be streamed in the UK\n                or select an option to get some inspiration!</div>\n            ) : (searching === true ? (\n              <div> Searching for {resultTerm}... </div>\n            ) : hasSearched === true ? (<div>Showing {movies.length} results for '{resultTerm}'</div>\n            ) : <div></div>)\n        }\n      </div>\n      {\n        movies.length > 0\n          ? (\n            <div className='container'>\n              {\n                movies.map((movie) => (\n                  <MovieTile key={movie.id} movie={movie} />\n                ))}\n            </div>\n          ) : (movies.length === 0 && hasSearched === true ? (\n            <div className='empty'>\n              <h2>No movies found</h2>\n            </div>\n          ) : <div></div>)\n\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}